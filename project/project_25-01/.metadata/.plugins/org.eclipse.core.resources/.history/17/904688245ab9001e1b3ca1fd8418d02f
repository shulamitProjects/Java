package registration.controller;

import java.awt.print.Book;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import dao.BookDao;
import dao.StudentDao;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model.Student;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
/**
* Servlet implementation class StudentServlet
 */
public class StudentServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	static Logger Logger=null;
	
	public void init (ServletConfig config) throws ServletException{
		String path =System.getProperty("/ProjectLibary/src/main/webapp/WEB-INF/classes/log4j.properties");
		System.out.println("path->"+path);
		PropertyConfigurator.configure(path);
		Logger=Logger.getLogger(StudentServlet.class.getName());
	}
	
	
private StudentDao studentDao = new StudentDao();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public StudentServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String userName = request.getParameter("userName");
		String password = request.getParameter("password");
		
		Student student = new Student();
		
		student.setUserName(userName);
		student.setPassword(password);
		boolean flag=false;
		Student st=new Student();
				
		 try {
			flag=StudentDao.checkExistStudent(student);
			System.out.println(flag);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 if(flag==true) {	 
			 try {
				st=StudentDao.returnExistStudent(student);
//				myBook=BookDao.getMyBook(st.getIdBook());

			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			 System.out.println(st);
			 List dataList = new ArrayList();
			 List myBook=new ArrayList();
				try {
				   dataList = BookDao.getListOfBooks();
				   
				   myBook=BookDao.getMyBook(st.getIdBook());
//				   System.out.println(myBook);
				}
				catch(ClassNotFoundException e) {
						
					e.printStackTrace();
				}
				dataList=dataList.add(myBook);
		      request.setAttribute("booksData", dataList);
			 RequestDispatcher requestDispatcher = request.getRequestDispatcher("/showBooks.jsp");
				if(requestDispatcher !=null )
		            requestDispatcher.forward(request, response);
				System.out.println("yes1234");
//				request.setAttribute("myBooks", myBook);
//				System.out.println(request.getAttribute("myBooks"));
//				RequestDispatcher requestDispatcher1 = request.getRequestDispatcher("/showBooks.jsp");
//				if(requestDispatcher1!=null) 
//					requestDispatcher.forward(request, response);
		 
		 }
	 
		 else {
			 RequestDispatcher requestDispatcher = request.getRequestDispatcher("/HomePage.jsp");
				System.out.println("HomePage path->"+ requestDispatcher);
				System.out.println("error 400");
				if(requestDispatcher !=null )
		            requestDispatcher.forward(request, response);
		 }

		response.getWriter().append("Served at: ").append(request.getContextPath());
	}
	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Logger.debug("Debbug logging");		
		Logger.info("info logging");
		Logger.warn("warn logging");
		Logger.error("Error logging");
		Logger.fatal("Fatal logging");
		//student Servlet code
		String userName = request.getParameter("userName");
		String password = request.getParameter("password");
		String address = request.getParameter("address");
		String phoneNum = request.getParameter("phoneNum");
		int id = request.getIntHeader("id");
		int idBook=request.getIntHeader("idBook");

		
		Student student = new Student();
		student.setId(id);
		student.setIdBook(idBook);
		student.setUserName(userName);
		student.setPassword(password);
		student.setAddress(address);
		student.setPhoneNum(phoneNum);
		
		System.out.println(student);
			
		try {	
			StudentDao.registerStudent(student);
		} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		List dataList = new ArrayList();
		try {
		   dataList = StudentDao.getListOfStudents();
		   
		}
		catch(ClassNotFoundException e) {
			
			e.printStackTrace();
		}
		
        request.setAttribute("studentData", dataList);
		
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("/LoginSuccess.jsp");
		System.out.println("LoginSuccess path->"+ requestDispatcher);
		if(requestDispatcher !=null )
            requestDispatcher.forward(request, response);
	}

}
