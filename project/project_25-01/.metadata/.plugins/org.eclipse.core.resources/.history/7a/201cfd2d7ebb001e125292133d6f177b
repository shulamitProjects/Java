package registration.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import dao.BookDao;
//import dao.LibraryWorkerDao;
import dao.StudentDao;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
//import model.LibraryWorker;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
/**
* Servlet implementation class StudentServlet
 */
public class DeleteBookServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	static Logger Logger=null;
	
	public void init (ServletConfig config) throws ServletException{
		String path =System.getProperty("/ProjectLibary/src/main/webapp/WEB-INF/classes/log4j.properties");
		System.out.println("path->"+path);
		PropertyConfigurator.configure(path);
		Logger=Logger.getLogger(StudentServlet.class.getName());
	}
	
	
private LibraryWorkerDao libraryWorkerDao = new LibraryWorkerDao();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public DeleteBookServlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Logger.debug("Debbug logging");		
		Logger.info("info logging");
		Logger.warn("warn logging");
		Logger.error("Error logging");
		Logger.fatal("Fatal logging");
		//student Servlet code
		System.out.println("dopost delete");
		
		int idBook =Integer.parseInt(request.getParameter("idBook"));
			try {	
						BookDao.deleteBook(idBook);
	                    List lst=BookDao.getListOfBooks();
	
	                    request.setAttribute("booksData", lst);
	                    System.out.println("lst"+lst);
	  
						 RequestDispatcher requestDispatcher = request.getRequestDispatcher("/LibraryWorker.jsp");
							System.out.println("LibraryWorker path->"+ requestDispatcher);
							System.out.println("success");
							if(requestDispatcher !=null )
					            requestDispatcher.forward(request, response);
					}catch (Exception e) {
						System.out.println("ERROR");
					}
				}
		
		
    }
    
